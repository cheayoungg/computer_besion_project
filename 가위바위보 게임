import cv2
import mediapipe as mp
import math

import numpy as np
from PIL import ImageFont, ImageDraw, Image

cap = cv2.VideoCapture(0)

mpHands = mp.solutions.hands
my_hands = mpHands.Hands()
mpDraw = mp.solutions.drawing_utils

def dist(x1,y1,x2,y2):
    return math.sqrt(math.pow(x1-x2,2))+math.sqrt(math.pow(y1-y2,2))


# 검지 : 0-8 < 0-6  -- 접힘
# 중지 : 0-12 < 0-10
# 약지 : 0-16 <0-14
# 소지 : 0-20 < 0-18
# 엄지 : 0-4 <0-18
compareIndex = [[18,4],[6,8],[10,12],[14,16],[18,20]]
open = [False,False,False,False,False]
gesture = [[False,False,False,False,False,"Rock"],
           [False,True,True,False,False,"Scissor"],
           [True,True,True,True,True,"Paper"]]


while True:
    success, img = cap.read()
    h,w,c = img.shape
    imgRGB = cv2.cvtColor(img,cv2.COLOR_BGR2RGB)
    results = my_hands.process(imgRGB)
    rsp = []

   # font = ImageFont.truetype("fonts/gulim.ttc", 80)
   # img = Image.fromarray(img)
   # draw = ImageDraw.Draw(img)
   # text = ""

    if results.multi_hand_landmarks:
        for handLms in results.multi_hand_landmarks:
            for i in range(0,5):
                open[i] = dist(handLms.landmark[0].x, handLms.landmark[0].y,
                               handLms.landmark[compareIndex[i][0]].x,handLms.landmark[compareIndex[i][0]].y) < dist(handLms.landmark[0].x, handLms.landmark[0].y,
                               handLms.landmark[compareIndex[i][1]].x, handLms.landmark[compareIndex[i][1]].y)
           # print(open)
            text_x = (handLms.landmark[0].x * w)
            text_y = (handLms.landmark[0].y * h)

            for i in range(0,len(gesture)):
                flag = True
                for j in range(0,5):
                    if(gesture[i][j] != open[j]):
                        flag = False
                if(flag == True):
                    cv2.putText(img,gesture[i][5],(round(text_x) -50, round(text_y)-250),cv2.FONT_HERSHEY_PLAIN,4,(0,0,0),4)
                    rsp.append({'rsp':gesture[i][5], 'org_x' : text_x, 'org_y':text_y })
                    print(rsp)

            mpDraw.draw_landmarks(img,handLms,mpHands.HAND_CONNECTIONS)

#            if len(rsp) >=2:
#                winner = None
#                text=""
#
#                if rsp[0]['rsp'] == 'Rock':
#                    if rsp[1]['rsp']=='Rock':  text = "OneMore"
#                    elif rsp[1]['rsp']=='Paper':  text = "Paper wins"; winner=1
#                    elif rsp[1]['rsp'] == 'Scissors': text = "Rock wins"; winner = 0

#                if winner is not None:
#                    cv2.putText(img, 'Winner', (rsp[winner]['org_x'], rsp[winner]['org_y'] + 70), cv2.FONT_HERSHEY_SIMPLEX, 2, (0, 255, 0), 3)
#                cv2.putText(img, text, (int(img.shape[1] / 2), 100), cv2.FONT_HERSHEY_SIMPLEX, 2, (0, 0, 255), 3)

    cv2.imshow("HandTracking",img)
    cv2.waitKey(1)
